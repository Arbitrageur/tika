name: build and publish

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
          include:
            - TIKA_TYPE: minimal
              TIKA_VERSION: 2.1.0
              TIKA_JAR: tika-server-standard
#         TIKA_TYPE: [full, minimal]
#         TIKA_VERSION: [2.1.0, 2.0.0, 1.27, 1.26]
#         include:
#         - TIKA_VERSION: 2.1.0
#           TIKA_JAR: tika-server-standard
#         - TIKA_VERSION: 2.0.0
#           TIKA_JAR: tika-server-standard
#         - TIKA_VERSION: 1.27
#           TIKA_JAR: tika-server
#         - TIKA_VERSION: 1.26
#           TIKA_JAR: tika-server
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/apache-tika-arm
          TAGS=${DOCKER_IMAGE}:${{ matrix.TIKA_VERSION }}-${{ matrix.TIKA_TYPE }}
          # Set output parameters.
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./${{ matrix.TIKA_TYPE }}/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            TIKA_VERSION=${{ matrix.TIKA_VERSION }}
            TIKA_JAR_NAME=${{ matrix.TIKA_JAR }}
          tags: ${{ steps.prep.outputs.tags }}
